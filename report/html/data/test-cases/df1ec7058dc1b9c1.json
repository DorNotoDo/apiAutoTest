{
  "uid" : "df1ec7058dc1b9c1",
  "name" : "本地测试上传单文件接口",
  "fullName" : "test.test_api.TestApiAuto#test_main",
  "historyId" : "910763468c64238ed99675960d57246a",
  "time" : {
    "start" : 1605868886259,
    "stop" : 1605868886262,
    "duration" : 3
  },
  "status" : "broken",
  "statusMessage" : "FileNotFoundError: [Errno 2] No such file or directory: '/user/data/case_data - 副本.xls'",
  "statusTrace" : "self = <test.test_api.TestApiAuto object at 0x000001CF1444D288>\ncase_number = 'case_009', case_title = '本地测试上传单文件接口', path = 'upload_file/'\nis_token = '', method = 'post', parametric_key = 'data'\nfile_var = '{\"file_excel\":\"/user/data/case_data - 副本.xls\"}', data = None\nexpect = '{\"msg\": \"ok\"}'\n\n    @pytest.mark.parametrize('case_number,case_title,path,is_token,method,parametric_key,file_var,'\n                             'data,expect', data_list)\n    def test_main(self, case_number, case_title, path, is_token, method, parametric_key, file_var,\n                data, expect):\n    \n        # 感谢：https://www.cnblogs.com/yoyoketang/p/13386145.html，提供动态添加标题的实例代码\n        # 动态添加标题\n        allure.dynamic.title(case_title)\n    \n        logger.debug(f'⬇️⬇️⬇️...执行用例编号:{case_number}...⬇️⬇️⬇️️')\n        with allure.step(\"处理相关数据依赖，header\"):\n    \n            header = DataProcess.header\n            allure.attach(json.dumps(header, ensure_ascii=False, indent=4), \"请求头\", allure.attachment_type.TEXT)\n            path = DataProcess.handle_path(path)\n    \n            data = DataProcess.handle_data(data)\n            allure.attach(json.dumps(data, ensure_ascii=False, indent=4), \"请求数据\", allure.attachment_type.TEXT)\n    \n        with allure.step(\"发送请求，取得响应结果的json串\"):\n            allure.attach(json.dumps(base_url + path, ensure_ascii=False, indent=4), \"最终请求地址\", allure.attachment_type.TEXT)\n            res = br.api_send(method=method, url=base_url + path, parametric_key=parametric_key, file_obj=file_var,\n>                                  data=data, header=header)\n\ntest_api.py:74: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\api\\base_requests.py:42: in api_send\n    files = DataProcess.handler_files(file_obj)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ncls = <class 'tools.data_process.DataProcess'>\nfile_obj = {'file_excel': '/user/data/case_data - 副本.xls'}\n\n    @classmethod\n    def handler_files(cls, file_obj: str) -> object:\n        \"\"\"file对象处理方法\n        :param file_obj: 上传文件使用，格式：{\"接口中文件参数的名称\":\"文件路径地址\"/[\"文件地址1\", \"文件地址2\"]}\n        实例- 单个文件: &file&D:\n        \"\"\"\n    \n        # if (file_var in [None, '']) and (file_path in [None, '']):\n        #     files = None\n        # else:\n        #     # 文件不为空的操作\n        #     if file_path.startswith('[') and file_path.endswith(']'):\n        #         file_path_list = eval(file_path)\n        #         files = []\n        #         # 多文件上传\n        #         for file_path in file_path_list:\n        #             files.append((file_var, (open(file_path, 'rb'))))\n        #     else:\n        #         # 单文件上传\n        #         files = {file_var: open(file_path, 'rb')}\n        if file_obj != '' or file_obj != '{}':\n            logger.error(file_obj)\n            file_obj = convert_json(file_obj)\n            files = []\n            for k, v in file_obj.items():\n                if isinstance(v, list):\n                    logger.info('list类型')\n                    for file_path in v:\n                        # 根据系统路径处理文件地址出现的错误转以字符\n                        if file_path[0] != '/':\n                            file_path = file_path.replace(':', ':\\\\')\n                        logger.info(v)\n                        logger.info(file_path)\n                        files.append((k, (open(file_path, 'rb'))))\n            else:\n>               files = {k: open(v, 'rb')}\nE               FileNotFoundError: [Errno 2] No such file or directory: '/user/data/case_data - 副本.xls'\n\n..\\tools\\data_process.py:89: FileNotFoundError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "FileNotFoundError: [Errno 2] No such file or directory: '/user/data/case_data - 副本.xls'",
    "statusTrace" : "self = <test.test_api.TestApiAuto object at 0x000001CF1444D288>\ncase_number = 'case_009', case_title = '本地测试上传单文件接口', path = 'upload_file/'\nis_token = '', method = 'post', parametric_key = 'data'\nfile_var = '{\"file_excel\":\"/user/data/case_data - 副本.xls\"}', data = None\nexpect = '{\"msg\": \"ok\"}'\n\n    @pytest.mark.parametrize('case_number,case_title,path,is_token,method,parametric_key,file_var,'\n                             'data,expect', data_list)\n    def test_main(self, case_number, case_title, path, is_token, method, parametric_key, file_var,\n                data, expect):\n    \n        # 感谢：https://www.cnblogs.com/yoyoketang/p/13386145.html，提供动态添加标题的实例代码\n        # 动态添加标题\n        allure.dynamic.title(case_title)\n    \n        logger.debug(f'⬇️⬇️⬇️...执行用例编号:{case_number}...⬇️⬇️⬇️️')\n        with allure.step(\"处理相关数据依赖，header\"):\n    \n            header = DataProcess.header\n            allure.attach(json.dumps(header, ensure_ascii=False, indent=4), \"请求头\", allure.attachment_type.TEXT)\n            path = DataProcess.handle_path(path)\n    \n            data = DataProcess.handle_data(data)\n            allure.attach(json.dumps(data, ensure_ascii=False, indent=4), \"请求数据\", allure.attachment_type.TEXT)\n    \n        with allure.step(\"发送请求，取得响应结果的json串\"):\n            allure.attach(json.dumps(base_url + path, ensure_ascii=False, indent=4), \"最终请求地址\", allure.attachment_type.TEXT)\n            res = br.api_send(method=method, url=base_url + path, parametric_key=parametric_key, file_obj=file_var,\n>                                  data=data, header=header)\n\ntest_api.py:74: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\api\\base_requests.py:42: in api_send\n    files = DataProcess.handler_files(file_obj)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ncls = <class 'tools.data_process.DataProcess'>\nfile_obj = {'file_excel': '/user/data/case_data - 副本.xls'}\n\n    @classmethod\n    def handler_files(cls, file_obj: str) -> object:\n        \"\"\"file对象处理方法\n        :param file_obj: 上传文件使用，格式：{\"接口中文件参数的名称\":\"文件路径地址\"/[\"文件地址1\", \"文件地址2\"]}\n        实例- 单个文件: &file&D:\n        \"\"\"\n    \n        # if (file_var in [None, '']) and (file_path in [None, '']):\n        #     files = None\n        # else:\n        #     # 文件不为空的操作\n        #     if file_path.startswith('[') and file_path.endswith(']'):\n        #         file_path_list = eval(file_path)\n        #         files = []\n        #         # 多文件上传\n        #         for file_path in file_path_list:\n        #             files.append((file_var, (open(file_path, 'rb'))))\n        #     else:\n        #         # 单文件上传\n        #         files = {file_var: open(file_path, 'rb')}\n        if file_obj != '' or file_obj != '{}':\n            logger.error(file_obj)\n            file_obj = convert_json(file_obj)\n            files = []\n            for k, v in file_obj.items():\n                if isinstance(v, list):\n                    logger.info('list类型')\n                    for file_path in v:\n                        # 根据系统路径处理文件地址出现的错误转以字符\n                        if file_path[0] != '/':\n                            file_path = file_path.replace(':', ':\\\\')\n                        logger.info(v)\n                        logger.info(file_path)\n                        files.append((k, (open(file_path, 'rb'))))\n            else:\n>               files = {k: open(v, 'rb')}\nE               FileNotFoundError: [Errno 2] No such file or directory: '/user/data/case_data - 副本.xls'\n\n..\\tools\\data_process.py:89: FileNotFoundError",
    "steps" : [ {
      "name" : "处理相关数据依赖，header",
      "time" : {
        "start" : 1605868886259,
        "stop" : 1605868886260,
        "duration" : 1
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "b8cec252621dddda",
        "name" : "请求头",
        "source" : "b8cec252621dddda.txt",
        "type" : "text/plain",
        "size" : 2
      }, {
        "uid" : "f4a5dff67a1557fb",
        "name" : "请求数据",
        "source" : "f4a5dff67a1557fb.txt",
        "type" : "text/plain",
        "size" : 4
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "attachmentsCount" : 2,
      "shouldDisplayMessage" : false
    }, {
      "name" : "发送请求，取得响应结果的json串",
      "time" : {
        "start" : 1605868886260,
        "stop" : 1605868886261,
        "duration" : 1
      },
      "status" : "broken",
      "statusMessage" : "FileNotFoundError: [Errno 2] No such file or directory: '/user/data/case_data - 副本.xls'\n",
      "statusTrace" : "  File \"D:\\apiAutoTest\\test\\test_api.py\", line 74, in test_main\n    data=data, header=header)\n  File \"D:\\apiAutoTest\\api\\base_requests.py\", line 42, in api_send\n    files = DataProcess.handler_files(file_obj)\n  File \"D:\\apiAutoTest\\tools\\data_process.py\", line 89, in handler_files\n    files = {k: open(v, 'rb')}\n",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "f887e634f6112fba",
        "name" : "最终请求地址",
        "source" : "f887e634f6112fba.txt",
        "type" : "text/plain",
        "size" : 35
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : true
    } ],
    "attachments" : [ {
      "uid" : "198a3dff162fa76f",
      "name" : "stderr",
      "source" : "198a3dff162fa76f.txt",
      "type" : "text/plain",
      "size" : 556
    } ],
    "parameters" : [ ],
    "stepsCount" : 2,
    "hasContent" : true,
    "attachmentsCount" : 4,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "test"
  }, {
    "name" : "suite",
    "value" : "test_api"
  }, {
    "name" : "subSuite",
    "value" : "TestApiAuto"
  }, {
    "name" : "host",
    "value" : "LAPTOP-FR8LEA9G"
  }, {
    "name" : "thread",
    "value" : "4248-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test.test_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "case_number",
    "value" : "'case_009'"
  }, {
    "name" : "case_title",
    "value" : "'本地测试上传单文件接口'"
  }, {
    "name" : "data",
    "value" : "''"
  }, {
    "name" : "expect",
    "value" : "'{\"msg\": \"ok\"}'"
  }, {
    "name" : "file_var",
    "value" : "'{\"file_excel\":\"/user/data/case_data - 副本.xls\"}'"
  }, {
    "name" : "is_token",
    "value" : "''"
  }, {
    "name" : "method",
    "value" : "'post'"
  }, {
    "name" : "parametric_key",
    "value" : "'data'"
  }, {
    "name" : "path",
    "value" : "'upload_file/'"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "df1ec7058dc1b9c1.json",
  "parameterValues" : [ "'case_009'", "'本地测试上传单文件接口'", "''", "'{\"msg\": \"ok\"}'", "'{\"file_excel\":\"/user/data/case_data - 副本.xls\"}'", "''", "'post'", "'data'", "'upload_file/'" ]
}